#set ft=ansible
---
- name: get the default ip of localhost
  hosts: localhost
  tasks:
    - debug:
        var: ansible_default_ipv4.address

- name: Update software on bastion and osp nodes and install OCP utils
  hosts: 
    - "{{ ('tag_' ~ env_type ~ '_' ~ guid ~ '_bastion') | replace('-', '_') }}"
    - "{{ ('tag_' ~ env_type ~ '_' ~ guid ~ '_OCP_Nodes') | replace('-', '_') }}"
  become: true
  vars_files:
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_secret_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/ssh_vars.yml"
  tags:
    - checkpoint0
  tasks:
    - yum:
        name: "*"
        state: latest
    - yum:
        name: "{{ item }}"
        state: latest
      with_items: "{{ common_packages }}"
    - yum:
        name: " {{ item }}"
        state: latest
      with_items:
        - atomic-openshift-utils
        - atomic-openshift-clients

- name: Reboot ocp nodes
  hosts: 
    - "{{ ('tag_' ~ env_type ~ '_' ~ guid ~ '_OCP_Nodes') | replace('-', '_') }}"
  become: true
  vars_files:
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_secret_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/ssh_vars.yml"
  tags:
    - checkpoint0
  tasks:
    - name: reboot updated systems
      shell: sudo /usr/bin/systemd-run --on-active=10 /usr/bin/systemctl reboot

- name: Reboot bastion
  hosts: 
    - "{{ ('tag_' ~ env_type ~ '_' ~ guid ~ '_bastion') | replace('-', '_') }}"
  become: true
  vars_files:
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_secret_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/ssh_vars.yml"
  tags:
    - checkpoint0
  tasks:
    - name: reboot updated systems
      shell: sudo /usr/bin/systemd-run --on-active=10 /usr/bin/systemctl reboot

- name: Wait for Systems to reboot
  hosts: localhost
  tasks:
    - pause:
        seconds: 30

- name: Wait for bastion readiness
  hosts: localhost
  tasks:
    - wait_for:
        port: 22
        host: "{{ (groups[('tag_' ~ env_type ~ '_' ~ guid ~ '_bastion_public') | replace('-', '_')]).0 }}"
        search_regex: OpenSSH
        delay: 30

- name: Wait for SSH connection to be released
  hosts: localhost
  tasks:
    - pause:
        seconds: 3

- name: Wait for full environment readiness
  hosts: 
    - "{{ ('tag_Project_' ~ env_type ~ '_' ~ guid) | replace('-', '_') }}"
  vars_files:
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_secret_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/ssh_vars.yml"
  gather_facts: false
  any_errors_fatal: True
  become: true
  tasks:
    - name: wait for host to be available and set hostnames
      wait_for:
        host: '{{ inventory_hostname }}'
        port: 22
        search_regex: OpenSSH
      delegate_to: "{{ (hostvars['localhost']['groups'][('tag_' ~ env_type ~ '_' ~ guid ~ '_bastion_public') | replace('-', '_')].0) }}"
      become: false
    - debug:
        msg: "{{hostvars[inventory_hostname]}}"
    - name: Set hostname based on ec2_tag_internaldns
      hostname:
        name: "{{inventory_hostname}}"

- name: Wait for SSH connection to be released
  hosts: localhost
  tasks:
    - pause:
        seconds: 3

- name: Install and configure docker on ocp nodes
  hosts: "{{ ('tag_' ~ env_type ~ '_' ~ guid ~ '_OCP_Nodes') | replace('-', '_') }}"
  become: true
  vars_files:
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_secret_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/ssh_vars.yml"
  tasks:
    - name: OSP - Install and configure docker
      yum:
        name: "docker"
        state: latest
    - name: configure /etc/sysconfig/docker
      command: sed -i '/OPTIONS=.*/c\OPTIONS="--selinux-enabled --insecure-registry 172.30.0.0/16"' /etc/sysconfig/docker
    - lineinfile:
        dest: /etc/sysconfig/docker-storage-setup
        line: 'DEVS=/dev/vdb'
    - lineinfile:
        dest: /etc/sysconfig/docker-storage-setup
        line: 'VG=docker-vg'
    - name: Enable and start docker
      systemd:
        state: started
        enabled: yes
        name: docker

#- include: "{{ ANSIBLE_REPO_PATH }}/cloud_providers/{{ cloud_provider }}/checkpoint-freeze.yml checkpoint_id=checkpoint1"

- name: debug vars
  hosts: "{{ ('tag_' ~ env_type ~ '_' ~ guid ~ '_master') | replace('-', '_') }}"
  remote_user: "{{ remote_user }}"
  become: true
  vars_files:
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_secret_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/ssh_vars.yml"
  tags:
    - checkpoint1
  tasks:
    - debug:
        var: hostvars

- name: ensure authorized keys exist for root
  hosts: 
    - "{{ ('tag_' ~ env_type ~ '_' ~ guid ~ '_OCP_Nodes') | replace('-', '_') }}"
    - "{{ ('tag_' ~ env_type ~ '_' ~ guid ~ '_bastion') | replace('-', '_') }}"
  remote_user: "{{ remote_user }}"
  become: true
  tags:
    - checkpoint1
  vars:
    - localhost_public_key: "{{ hostvars['localhost']['env_public_key'] }}"
  vars_files:
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_secret_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/ssh_vars.yml"
  tasks:
    - lineinfile: 
        line: "{{ localhost_public_key }}"
        dest: /root/.ssh/authorized_keys

- name: ensure private key is present on master
  hosts: "{{ ('tag_' ~ env_type ~ '_' ~ guid ~ '_master') | replace('-', '_') }}"
  remote_user: "{{ remote_user }}"
  become: true
  vars_files:
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_secret_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/ssh_vars.yml"
  tags:
    - checkpoint1
  tasks:
    - copy: 
        src: "{{ ANSIBLE_REPO_PATH }}/workdir/{{ env_authorized_key }}"
        dest: /home/{{ remote_user }}/.ssh/id_rsa 
        owner: "{{ remote_user }}"
        group: "{{ remote_user }}"
        mode: 0600
    - copy: 
        src: "{{ ANSIBLE_REPO_PATH }}/workdir/{{ env_authorized_key }}"
        dest: /root/.ssh/id_rsa 
        owner: "root"
        group: "root"
        mode: 0600

- name: install ocp on bastion
  hosts: "{{ ('tag_' ~ env_type ~ '_' ~ guid ~ '_bastion') | replace('-', '_') }}"
  remote_user: "root"
  become: true
  vars_files:
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_secret_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/ssh_vars.yml"
  tags:
    - checkpoint1
    - ocp-install
  tasks:
    - file:
        path: /var/named
        state: directory
    - name: copy named.conf
      copy: 
        src: "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/files/named/named.conf"
        dest: "/etc/named.conf"
    - name: copy named zone files
      copy: 
        src: "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/files/named/{{ item }}"
        dest: "/var/named/{{ item }}"
      with_items:
        - 0.168.192.in-addr.arpa
        - apps.example.com.zone
        - example.com.zone
    - name: Enable and start named.service
      systemd:
        state: started
        enabled: yes
        name: named
    - name: copy haproxy.cfg
      copy: 
        src: "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/files/haproxy/haproxy.cfg"
        dest: "/etc/haproxy"
    - name: copy fixhaproxy.service
      copy: 
        src: "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/files/haproxy/fixhaproxy.service"
        dest: "/etc/systemd/system/fixhaproxy.service"
    - name: copy update_HAProxy.sh
      copy: 
        src: "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/files/haproxy/update_HAProxy.sh"
        dest: "/usr/local/bin/update_HAProxy.sh"
        mode: a+x
    - lineinfile:
        dest: /etc/NetworkManager/NetworkManager.conf
        insertafter: '^.main.'
        line: 'dns=none'
    - name: Restart named.service
      systemd:
        state: restarted
        enabled: yes
        name: named
    - name: restart NetworkManager
      systemd:
        state: restarted
        name: NetworkManager
    - copy:
        content: |
          search localdomain srv.ravcloud.com example.com
          nameserver 192.168.0.1 # Ravello Internal DNS Server.  Should not be hard-coded
          nameserver 192.168.0.5 # Bastion DNS Server
        dest: /etc/resolv.conf
    - name: copy openshift-ansible
      copy: 
        src: "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/files/openshift-ansible"
        dest: "/home/{{ remote_user }}"
    - name: run openshift-ansible install
      command: ansible-playbook -i inventory /usr/share/ansible/openshift-ansible/playbooks/byo/config.yml
      args:
        chdir: /home/{{ remote_user }}/openshift-ansible

- name: Wait for bastion readiness
  hosts: localhost
  tasks:
    - wait_for:
        port: 22
        host: "{{ (groups[('tag_' ~ env_type ~ '_' ~ guid ~ '_bastion_public') | replace('-', '_')]).0 }}"
        search_regex: OpenSSH
        delay: 30

- name: Wait for SSH connection to be released
  hosts: localhost
  tags:
    - checkpoint1
  tasks:
    - pause:
        seconds: 5

- name: Wait for full environment readiness
  hosts: 
    - "{{ ('tag_Project_' ~ env_type ~ '_' ~ guid) | replace('-', '_') }}"
  vars_files:
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_secret_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/ssh_vars.yml"
  gather_facts: false
  any_errors_fatal: True
  become: true
  tasks:
    - name: wait for host to be available
      wait_for:
        connect_timeout: 60
        host: '{{ inventory_hostname }}'
        port: 22
        search_regex: OpenSSH
      delegate_to: "{{ (hostvars['localhost']['groups'][('tag_' ~ env_type ~ '_' ~ guid ~ '_bastion_public') | replace('-', '_')].0) }}"
      become: false
    - debug:
        msg: "{{hostvars[inventory_hostname]}}"

- name: Wait for SSH connection to be released
  hosts: localhost
  tags:
    - checkpoint1
  tasks:
    - pause:
        seconds: 25

- name: configure ocp master node
  hosts: "{{ ('tag_' ~ env_type ~ '_' ~ guid ~ '_master') | replace('-', '_') }}"
  remote_user: "{{ remote_user }}"
  become: true
  vars_files:
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_secret_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/ssh_vars.yml"
  tags:
    - checkpoint1
  tasks:
    - command: htpasswd -bc /etc/origin/master/htpasswd admin {{ default_password }}
    - copy: 
        src: "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/files/publicurl/fixpublicurl.service"
        dest: "/etc/systemd/system/fixpublicurl.service"
    - copy: 
        src: "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/files/publicurl/update_publicURL.sh"
        dest: "/usr/local/bin/update_publicURL.sh"
        mode: a+x
    - name: Enable and start fixpublicurl
      systemd:
        enabled: yes
        state: started
        name: fixpublicurl
    - wait_for: 
        host: "{{ inventory_hostname }}"
        port: 8053
    - name: get openshift token name
      shell: "oc -n management-infra get secrets | grep admin-token | tail -1 | cut -d' ' -f1"
      register: oc_token_name
    - name: save openshift token
      shell: "oc -n management-infra get secrets {{ oc_token_name.stdout }} --template='{{ '{{'  }}.data.token {{ '}}' }}' | base64 -d"
      register: oc_token_output 
    - set_fact: 
        oc_token
    - debug:
        var: oc_token_output.stdout

- name: save ocp token to bastion
  hosts: "{{ ('tag_' ~ env_type ~ '_' ~ guid ~ '_bastion') | replace('-', '_') }}"
  remote_user: "{{ remote_user }}"
  become: true
  vars_files:
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_secret_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/ssh_vars.yml"
  tags:
    - checkpoint1
  tasks:
    - debug:
        var: hostvars
    - copy:
        content: "{{ hostvars[master_assigned_hostname]['oc_token_output']['stdout'] }}"
        dest: /root/ocp.token
    - name: Enable and start fixhaproxy
      systemd:
        enabled: yes
        state: started
        name: fixhaproxy
    - name: Enable and start haproxy
      systemd:
        enabled: yes
        state: started
        name: haproxy
    
- name: Configure cloudforms appliance
  hosts: "{{ ('tag_' ~ env_type ~ '_' ~ guid ~ '_cfme') | replace('-', '_') }}"
  become: true
  vars_files:
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_secret_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/ssh_vars.yml"
  tags:
    - checkpoint2
  tasks:
    - name: appliance_console_cli
      command: "sudo -i -u root appliance_console_cli -k -i -b /dev/vdb -p {{ default_password }} -r 123 -H cloudforms.example.com -v"

