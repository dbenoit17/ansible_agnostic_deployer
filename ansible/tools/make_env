#!/bin/bash

ENV_NAME=$1

AGNOSTIC_DEPLOYER_ROOT=$(realpath `dirname $(readlink -f $0)`/../..)

if [[ $1 == '--clean' ]]; then
  ENV_NAME=$2
  rm -r $AGNOSTIC_DEPLOYER_ROOT/ansible/configs/$ENV_NAME
  rm $AGNOSTIC_DEPLOYER_ROOT/ansible/tools/python_templates/$ENV_NAME.py
  rm $AGNOSTIC_DEPLOYER_ROOT/ansible/software_playbooks/$ENV_NAME.yml
  rm $AGNOSTIC_DEPLOYER_ROOT/ansible/tools/deploy/$ENV_NAME
  exit
fi 

cp -Tnr $AGNOSTIC_DEPLOYER_ROOT/ansible/tools/config-templates/bastion-blank \
        $AGNOSTIC_DEPLOYER_ROOT/ansible/configs/$ENV_NAME && echo "created config $ENV_NAME"

cp -n $AGNOSTIC_DEPLOYER_ROOT/ansible/tools/python_templates/bastion-blank.py \
      $AGNOSTIC_DEPLOYER_ROOT/ansible/tools/python_templates/$ENV_NAME.py && \
      echo "created template genscript"

vim -c 'colorscheme zellner' \
       $AGNOSTIC_DEPLOYER_ROOT/ansible/tools/python_templates/$ENV_NAME.py

python $AGNOSTIC_DEPLOYER_ROOT/ansible/tools/python_templates/$ENV_NAME.py > \
       $AGNOSTIC_DEPLOYER_ROOT/ansible/configs/$ENV_NAME/files/cloud_providers/ravello_cloud_template.j2 && \
       echo "generated template"

cp -n $AGNOSTIC_DEPLOYER_ROOT/ansible/software_playbooks/bastion_example.yml \
      $AGNOSTIC_DEPLOYER_ROOT/ansible/software_playbooks/$ENV_NAME.yml
vim -c 'colorscheme zellner' \
       $AGNOSTIC_DEPLOYER_ROOT/ansible/software_playbooks/$ENV_NAME.yml


if [[ ! -f $AGNOSTIC_DEPLOYER_ROOT/ansible/configs/$ENV_NAME/env_secret_vars.yml ]]; then
  echo "# env_secret_vars.yml" >  $AGNOSTIC_DEPLOYER_ROOT/ansible/configs/$ENV_NAME/env_secret_vars.yml
fi

vim -c 'colorscheme zellner' \
       $AGNOSTIC_DEPLOYER_ROOT/ansible/configs/$ENV_NAME/env_secret_vars.yml

if [[ ! -f $AGNOSTIC_DEPLOYER_ROOT/ansible/tools/deploy/$ENV_NAME ]]; then
  cp $AGNOSTIC_DEPLOYER_ROOT/ansible/tools/deploy/deploy_template $AGNOSTIC_DEPLOYER_ROOT/ansible/tools/deploy/$ENV_NAME && echo 'created deploy script'
  sed -i "s/expo-blank/$ENV_NAME/g" $AGNOSTIC_DEPLOYER_ROOT/ansible/tools/deploy/$ENV_NAME && echo 'updated deploy script'
  sed -i "s/dbenoit6/$ENV_NAME6/g" $AGNOSTIC_DEPLOYER_ROOT/ansible/tools/deploy/$ENV_NAME && echo 'updated deploy script'
  chmod +x $AGNOSTIC_DEPLOYER_ROOT/ansible/tools/deploy/$ENV_NAME
fi

