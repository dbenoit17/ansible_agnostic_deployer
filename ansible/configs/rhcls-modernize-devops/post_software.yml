- name: Dummy post software
  hosts: localhost

- name: Configure cloudforms appliance
  hosts: "{{ ('tag_' ~ env_type ~ '_' ~ guid ~ '_cloudforms') | replace('-', '_') }}"
  become: true
  vars_files:
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_secret_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/ssh_vars.yml"
  tasks:
    - name: appliance_console_cli
      command: "sudo -i -u root appliance_console_cli -k -i -b /dev/vdb -p {{ default_password }} -r 123 -H cloudforms.example.com -v"

- name: Configure Openstack and Upload Image
  hosts: "{{ ('tag_' ~ env_type ~ '_' ~ guid ~ '_controller') | replace('-', '_') }}"
  become: true
  vars:
    - host_tag: "{{ inventory_hostname | replace('-REPL.rhpds.opentlc.com', '') }}"
    - answers_file_url: "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/files/packstack/answers.txt"
    - answers_file: /home/{{ remote_user }}/answers.txt
    - glance_image_destination: "{{ glance_image_url }}"
    - glance_images:
        - { name: 'master', src: 'rhel.qcow2',dest: 'rhel.qcow2', flavor: 'm1.small' }
        - { name: 'node01', src: 'rhel.qcow2',dest: 'rhel.qcow2', flavor: 'm1.small' }
        - { name: 'node02', src: 'rhel.qcow2',dest: 'rhel.qcow2', flavor: 'm1.small' }
  vars_files:
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_secret_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/ssh_vars.yml"
  tasks:
    - name: get osp nic ip
      shell: "source /root/keystonerc_admin && echo $OS_AUTH_URL"
      register: os_auth_url_raw
    - name: wait for openstack services to be ready
      pause:
        seconds: 300
    - name: print os_auth_url_raw
      debug:
        var: os_auth_url_raw
    - set_fact:
        os_auth_url: "{{ os_auth_url_raw.stdout }}"
    - name: print os_auth_url
      debug:
        var: os_auth_url
    - name: write progress to nova log
      shell: echo "--- A MARK ---" >> /var/log/nova/nova-compute.log
    - name: Upload image into glance
      os_image:
        auth:
          auth_url: '{{ os_auth_url }}'
          username: admin
          password: "{{ default_password }}"
          project_name: admin
          default_domain_name: Default
        name: rhel.qcow2
        state: present
        filename: "{{ glance_image_destination }}/rhel.qcow2"
      retries: 10
    - name: generate osp keys
      os_keypair:
        auth:
          auth_url: '{{ os_auth_url }}'
          username: admin
          password: "{{ default_password }}"
          project_name: admin
          default_domain_name: Default
        state: present
        name: ansible_key
      register: osp_keys
    - debug:
        var: osp_keys
    - name: save osp public key to file
      copy:
        content: "{{ osp_keys.key.public_key }}"
        dest: "/root/osp_rsa.pub"
    - name: save osp private key to file
      copy:
        content: "{{ osp_keys.key.private_key }}"
        dest: "/root/osp_rsa"
        mode: 0600
        owner: root
    - os_network:
        auth:
          auth_url: http://{{ ansible_default_ipv4.address }}:5000/v2.0
          username: admin
          password: "{{ default_password }}"
          project_name: admin
          default_domain_name: Default
        state: present
        name: public
        external: true
        shared: true
        provider_physical_network: extnet
        provider_network_type: flat
    - os_subnet:
        auth:
          auth_url: http://{{ ansible_default_ipv4.address }}:5000/v2.0
          username: admin
          password: "{{ default_password }}"
          project_name: admin
          default_domain_name: Default
        state: present
        network_name: public
        name: public_subnet
        cidr: 192.168.20.0/24
        allocation_pool_start: 192.168.20.100
        allocation_pool_end: 192.168.20.200
    - os_security_group_rule:
        auth:
          auth_url: http://{{ ansible_default_ipv4.address }}:5000/v2.0
          username: admin
          password: "{{ default_password }}"
          project_name: admin
          default_domain_name: Default
        security_group: default
        protocol: tcp
        port_range_min: -1
        port_range_max: -1
        remote_ip_prefix: 0.0.0.0/0
    - os_security_group_rule:
        auth:
          auth_url: http://{{ ansible_default_ipv4.address }}:5000/v2.0
          username: admin
          password: "{{ default_password }}"
          project_name: admin
          default_domain_name: Default
        security_group: default
        protocol: icmp
        port_range_min: -1
        port_range_max: -1
        remote_ip_prefix: 0.0.0.0/0
    - shell: systemctl restart openstack-nova-*
    - shell: systemctl restart mariadb
    - shell: systemctl restart openstack-neutron*
    - pause:
        seconds: 30
  handlers:
    - name: restart httpd
      service:
        name: httpd
        state: restarted

- name: Launch OSP Instances
  hosts: "{{ ('tag_' ~ env_type ~ '_' ~ guid ~ '_controller') | replace('-', '_') }}"
  become: true
  vars:
    - host_tag: "{{ inventory_hostname | replace('-REPL.rhpds.opentlc.com', '') }}"
    - answers_file_url: "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/files/packstack/answers.txt"
    - answers_file: /home/{{ remote_user }}/answers.txt
    - glance_image_destination: "{{ glance_image_url }}"
    - glance_images:
        - { name: '{{ ocp_master_hostname }}', src: 'rhel.qcow2',dest: 'rhel.qcow2', flavor: 'm2.big' }
  vars_files:
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_secret_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/ssh_vars.yml"
  tasks:
    - name: create nova flavor
      os_nova_flavor:
        auth:
          auth_url: '{{ os_auth_url }}'
          username: admin
          password: "{{ default_password }}"
          project_name: admin
          default_domain_name: Default
        state: present
        name: m2.big
        vcpus: 8
        ram: 20
        disk: 50
    - name: launch compute instance
      os_server:
        auth:
          auth_url: '{{ os_auth_url }}'
          username: admin
          password: "{{ default_password }}"
          project_name: admin
          default_domain_name: Default
        timeout: 10000
        auto_ip: no
        state: present
        key_name: ansible_key
        image: "{{ item.src }}"
        flavor: "{{ item.flavor }}"
        name: "{{ item.name }}"
      with_items: "{{ glance_images }}"
    - name: add bastion public hostname
      add_host:
        name: "{{ ocp_master_hostname }}"
        groups: 
        - "{{ ('tag_' ~ env_type ~ '_' ~ guid ~ '_master') | replace('-', '_') }}"
        - "{{ ('tag_Project_' ~ env_type ~ '_' ~ guid) | replace('-', '_') }}"

- name: Test access to ocp master
  hosts: "{{ ('tag_' ~ env_type ~ '_' ~ guid ~ '_master') | replace('-', '_') }}"
  become: true
  tasks:
    - copy:
        content: "hello from master?"
        dest: /etc/motd

- name: PostSoftware flight-check
  hosts: localhost
  connection: local
  gather_facts: false
  become: false
  vars_files:
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_vars.yml"
    - "{{ ANSIBLE_REPO_PATH }}/configs/{{ env_type }}/env_secret_vars.yml"
  tags:
    - post_flight_check
  tasks:
    - debug:
        msg: "Post-Software checks completed successfully"
